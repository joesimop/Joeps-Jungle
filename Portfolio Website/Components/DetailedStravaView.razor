<Loader DataState="DataState">
    <div class="inverse-colors rounded p-3">

        <div class="d-inline float-end">
            <button class="inverse-colors" type="button" data-bs-toggle="offcanvas" data-bs-target="#DetailedRun">
                <i class="fa fa-window-close fa-lg text-white"></i>
            </button>
        </div>
        <h4 class="d-inline">@Activity.Name</h4>
        </div>
        <div class="p-3 h-100 text-dark"  style="overflow-y: auto;">
            <div class="col-md-9">
                <div class="w-100">
                    @(string.IsNullOrEmpty(Activity.Description) ? "No Description" : Activity.Description)
                </div>
            </div>
            <hr />
            <div class="row row-cols-1 row-cols-md-2 gy-4 p-3">

                <div class="col align-items-center d-flex">
                    <div class="row row-cols-1 row-cols-md-2 gy-4">

                            <h2 class="col">
                                <i class="fa fa-calendar-alt fa-lg pe-1" />
                        @(Activity.StartDate.ToString("MM/dd/yyyy"))
                            </h2>

                            <h2 class="col">
                                <i class="fa fa-map-pin fa-lg pe-1" />
                        @(Activity.Distance.MetersToMiles().DisplayDouble()) miles
                            </h2>

                            <h2 class="col">
                                <i class="fa fa-stopwatch fa-lg pe-1" />
                        @(Activity.MovingTime.DisplayTime())
                            </h2>

                            <h2 class="col">
                                <i class="fa fa-tachometer fa-lg pe-1" />
                        @(Conversions.DisplayPace(Activity.MovingTime, Activity.Distance)) min/mi.
                            </h2>

                            <h2 class="col">
                                <i class="fa fa-mountain fa-lg pe-1" />
                        @(Activity.ElevatoinGain) ft.
                            </h2>

                            <h2 class="col">
                                <i class="fa fa-fire-alt fa-lg pe-1" />
                        @(Activity.Calories) calories
                            </h2>
                        </div>
                </div>

                <div class="col d-flex justify-content-center align-items-center">
                    @if (@Activity.PhotoCount > 0)
                    {
                                        <img src="@Activity.photo.Container.PhotoLinks.HighRes" style="height: 15rem; width: auto; margin: 0 auto;"/>
                    }
                    else
                    {
                                        <h2>No Photos this run :(</h2>
                    }
                </div>

                <div class="col">
                    <div id="map" class="border" style="min-height: 20rem; width: auto;"></div>
                     @if (HasSongs)
                        {
                        <div class="border mw-50 h-auto p-3 bg-dark text-white rounded overflow-hidden">
                            <div class="row">
                                <div class="col-6">
                                    <p><strong class="text-accent">Song: </strong>@CurrentTrack.Name</p>

                                                @if (this.CurrentTrack.Artist is not null)
                                                {
                                                        <p><strong class="text-accent">Artist: </strong>@CurrentTrack.Artist.Name</p>
                                                }
                                                @if (this.CurrentTrack.Album is not null)
                                                {
                                                        <p><strong class="text-accent">Album: </strong>@CurrentTrack.Album.Name</p>
                                                }
                                </div>
                                <div class="col-6 text-center">
                                    @if (this.CurrentTrack.Images.Any())
                                    {
                                            <img class="border border-white border-2" src="@CurrentTrack.Images[2].Url" alt="@CurrentTrack.Album.Name" style="height: 8rem; width: auto;"/>
                                    }
                                </div>
                            </div>
                        </div>

                    } else  {
                            <h2>No music data this run :/</h2>
                    }
                    <span>Move the slider to see where I was on the run @(HasSongs ? "and what I was listening to" : "")!</span>
                    <input @ref="SliderInput"
                            type="range" 
                            min="0"
                            max="@(Activity.PolyLineLength == 0 ? 0 : Activity.PolyLineLength - 1)"
                            value="0" class="w-100" id="myRange" 
                            @oninput="async () => await UpdateMarker()"
                            @onchange="UpdateTrackDisplay">
                </div>

                <div class="col">
                    <SplitsBreakdown Splits="@Activity.Splits" />
                </div>

                @*<div class="col">
                    <StravaDataModual DistanceTraveled="@DistanceTraveled" />
                </div>*@
            </div>
        </div>
</Loader>